{
  
    
        "post0": {
            "title": "Title",
            "content": ". public class FRQ1 { public static int numberOfLeapYears(int year1, int year2) { //create a static method boolean isLeapYear = false; //create a boolean called isLeapYear for(int i = year1 ; i &lt;= year2 &amp;&amp; i &gt; 0; i++) { if (i % 4 ==0){ //determine if i(year) is or not a leap year if (i % 100 == 0){ if (i % 400 == 0){ isLeapYear = true; } else { isLeapYear = false; } } else isLeapYear = true; } else isLeapYear = false; if (isLeapYear){ //method that if the boolean is true(if i is a leap year), print the year System.out.println(i + &quot; is a leap year.&quot;); } } return year1; //return code (no actual use, just to make sure the class goes well) } } FRQ1.numberOfLeapYears(1900, 2000); . 1904 is a leap year. 1908 is a leap year. 1912 is a leap year. 1916 is a leap year. 1920 is a leap year. 1924 is a leap year. 1928 is a leap year. 1932 is a leap year. 1936 is a leap year. 1940 is a leap year. 1944 is a leap year. 1948 is a leap year. 1952 is a leap year. 1956 is a leap year. 1960 is a leap year. 1964 is a leap year. 1968 is a leap year. 1972 is a leap year. 1976 is a leap year. 1980 is a leap year. 1984 is a leap year. 1988 is a leap year. 1992 is a leap year. 1996 is a leap year. 2000 is a leap year. . 1900 .",
            "url": "https://tianbinliu.github.io/Fastpage/2022/09/19/frq1.html",
            "relUrl": "/2022/09/19/frq1.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Jupyter Notebook lesson on ifs",
            "content": "Build your own Jupyter Notebook lesson on ifs . Explain if, if-else, and if-elseif-else. | Make a markdown block before you sample code | Comment in code to describe each decision | . // if, if-else, and if-elseif-else are all conditional statement and return a boolean value(true or false) //else statement does not include condition. //Example of only one if statement int a = 13; //set a value int b = 14; //set a value public ifstatement(){ if (a &lt; b){ //if the condition is true then execute the code inside the curly braces System.out.println(&quot;highest value:&quot; + b); // code that will be executed } } //Example of if-else statement public ifelsestatement(){ if (a &lt; b){ //if the condition is true then execute the code inside the curly braces System.out.println(&quot;highest value:&quot; + b); // code that will be executed } else if (a &gt; b){ //if the first if statement is not true and the condition of the else-if statement is true, then execute the code inside the curly braces System.out.println(&quot;highest value:&quot; + a); // code that will be executed } } //Example of if-elseif-else statement public ifelseifelse(){ if (a &lt; b){ //if the condition is true then execute the code inside the curly braces System.out.println(&quot;highest value:&quot; + b); // code that will be executed } else if (a &gt; b){ //if the first if statement is not true and the condition of the else-if statement is true, then execute the code inside the curly braces System.out.println(&quot;highest value:&quot; + a); // code that will be executed } else { //if all if-statement above this else-statement is not true, then execute the code inside the curly braces System.out.println(&quot;highest value: none&quot;); // code that will be executed } } . highest value:14 . Add to lesson switch-case . Create and if-elseif-elseif-elsif-else statement, 5 or more conditions. | Covert the 5 or more decisions to a switch-case-case-case-case-otherwise. | Make a markdown block before each code example | Comment/establish a style of comments for your if-elseif and switch-case code blocks | int a = random(1,500); int b = random(1,1000); int c = 500; if(c &lt; a = b){ //if a is equal to b and greater than c, execute the code below System.out.println(&quot;two highest value a and b:&quot; + a); // code that will be executed } else if(c &gt; a = b){ //if the condition of statement above is not true, then check for this condition. System.out.println(&quot;highest value c:&quot; + c); // code that will be executed } else if(b &lt; a &lt; c){//if the condition of statement above is not true, then check for this condition. System.out.println(&quot;highest value c:&quot; + c); // code that will be executed } else if(c &lt; a &lt; b){//if the condition of statement above is not true, then check for this condition. System.out.println(&quot;highest value b:&quot; + b); // code that will be executed } else if(a = c &gt; b){//if the condition of statement above is not true, then check for this condition. System.out.println(&quot;two highest value a and c:&quot; + b); // code that will be executed } else if(a = c &lt; b){//if the condition of statement above is not true, then check for this condition. System.out.println(&quot;highest value:&quot; + b); // code that will be executed } else{//if all the conditions of statements above are not true, then execute the code below. System.out.println(&quot;Can you tell me the answer?&quot;); // code that will be executed } . | int a = random(ram1,ram3); cannot find symbol symbol: method random(int,int) . Finish lesson with De Morgan&#39;s law . Describe De Morgan&#39;s law | ex. !(A || B) = (not A) and (not B) ; !(A &amp;&amp; B) = (not A) or (not B) | . Illustrate De Morgan&#39;s law | Not (A and B) is the same as Not A or Not B. | Not (A or B) is the same as Not A and Not B. | . Show some code running that shows understanding | int a = 50; int b = 50; if (!((a &lt; b) || (a &gt; b))){ System.out.println(&quot;a and b is equal&quot;); // code that will be executed } . a and b is equal .",
            "url": "https://tianbinliu.github.io/Fastpage/jupyter/2022/09/11/lession-ifs.html",
            "relUrl": "/jupyter/2022/09/11/lession-ifs.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Code.org blog with key learnings",
            "content": "Discuss creating and Using Objects . //we can use code below to create a object with a subclass called Writer. Writer mywriter = new Writer(); //creating an object call mywriter. //and using the object like give him an order mywriter.write(); // mywriter(objectname).write(methodname in the subclass)(); . Discuss extends . //extends like: a subclass &quot;extends&quot; the super class, the subclass can inherits its attributes and behaviors from the super class //If we want to create a subclass extends a super class we can use the code below public class Writer extends Jobs { public Writter(){ //constructor super() //&quot;super&quot; means the method(attributes and behaviors) in the super class &quot;Jobs&quot; is also access to the subclass &quot;Writer&quot; } } . In code.org unit 1 lesson 14, I tried to test the code below but found an error: &quot;There is no more paint in the painter&#39;s bucket&quot;; so I can&#39;t even start to draw the pattern. . myPatternPainter.paintPattern(&quot;white&quot;); .",
            "url": "https://tianbinliu.github.io/Fastpage/jupyter/2022/09/06/Codeweb.html",
            "relUrl": "/jupyter/2022/09/06/Codeweb.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Key learning on Primitives",
            "content": "Data Types . Define in a Class the following data types | Describe in comments how each data type choice is appropriate to application | . public class DefinePrimitives { public static void main(String[] args) { int anInt = 100; //It can be used in app that stored user information like age double aDouble = 89.9; //It like integer, but It can used to store information(number) after the decimal point boolean aBoolean = true; // It can be used to define a value is true or not which we can use it in if statement String aString = &quot;Hello, World!&quot;; //It can be used to print information in the screen for users to see String aStringFormal = new String(&quot;Greetings, World!&quot;); } } DefinePrimitives.main(null) . Perform arithmetic expressions and assignment in a program code . Perform compound assignment operator (ie +=), add comments to describe the result of operator . int a = 100; int b = 200; int c = 0; c = (a + b) * (a - b); // c is equal to (a + b) * (a - b) c += (100 * a)/b * a; // c is equal to c + (a + b) * (a - b) System.out.println(&quot;c: &quot; + c); . c: -25000 . Determine what is result is in a variable as a result of an data type and expression (ie integer vs double) . Answer: if the result in a variable is an integer number or the expression is int, then the data type is integer. If the result include a decimal point or the expression is double, then it is double. . Input Primitive data . Perform an arithmetic expressions that uses casting, add comments that show how it produces desired result. . double a = 12.2/2; int b = (int)(a + 0.5); System.out.println(&quot;12.2/2 =&quot; + a); System.out.println(&quot;12/2 = &quot; + (int)a); System.out.println(&quot;12.2/2 rounded = &quot; + b); . 12.2/2 =6.1 12/2 = 6 12.2/2 rounded = 6 .",
            "url": "https://tianbinliu.github.io/Fastpage/jupyter/2022/08/28/Primitives.html",
            "relUrl": "/jupyter/2022/08/28/Primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "A Jupyter Notebook using Bash to show that I have all the key tools installed.",
            "content": "python --version . Python 3.9.12 . java --version . openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu118.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu118.04, mixed mode, sharing) . javac --version . javac 11.0.16 . conda --version . conda 4.14.0 . npm -version . 3.10.10 . python2 --version . Python 2.7.17 . python3 --version . Python 3.9.12 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/tianbinliu/.local/share/jupyter/kernels/bash java /home/tianbinliu/.local/share/jupyter/kernels/java javascript /home/tianbinliu/.local/share/jupyter/kernels/javascript python3 /home/tianbinliu/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /home/tianbinliu/anaconda3/share/jupyter/kernels/python3 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . conda list . # packages in environment at /home/tianbinliu/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.8.0 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . conda info . active environment : base active env location : /home/tianbinliu/anaconda3 shell level : 1 user config file : /home/tianbinliu/.condarc populated config files : conda version : 4.14.0 conda-build version : 3.21.8 python version : 3.9.12.final.0 virtual packages : __cuda=11.5=0 __linux=5.10.16.3=0 __glibc=2.27=0 __unix=0=0 __archspec=1=x86_64 base environment : /home/tianbinliu/anaconda3 (writable) conda av data dir : /home/tianbinliu/anaconda3/etc/conda conda av metadata url : None channel URLs : https://repo.anaconda.com/pkgs/main/linux-64 https://repo.anaconda.com/pkgs/main/noarch https://repo.anaconda.com/pkgs/r/linux-64 https://repo.anaconda.com/pkgs/r/noarch package cache : /home/tianbinliu/anaconda3/pkgs /home/tianbinliu/.conda/pkgs envs directories : /home/tianbinliu/anaconda3/envs /home/tianbinliu/.conda/envs platform : linux-64 user-agent : conda/4.14.0 requests/2.27.1 CPython/3.9.12 Linux/5.10.16.3-microsoft-standard-WSL2 ubuntu/18.04.2 glibc/2.27 UID:GID : 1000:1000 netrc file : None offline mode : False .",
            "url": "https://tianbinliu.github.io/Fastpage/jupyter/2022/08/26/verify-tools.html",
            "relUrl": "/jupyter/2022/08/26/verify-tools.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Python Notebook Blog Post",
            "content": "msg = &quot;Hello world&quot; print(msg) . Hello world .",
            "url": "https://tianbinliu.github.io/Fastpage/jupyter/2022/08/22/python-notebook.html",
            "relUrl": "/jupyter/2022/08/22/python-notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Fastpages Java Notebook Blog Post",
            "content": "public class HelloWorld { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } HelloWorld.main(null); . Hello World! . public class HelloWorld { public static void main(String[] args) { System.out.println(&quot;hello&quot;); } } HelloWorld.main(null); . hello . Week 2 Gui Menu . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;Home&quot;, &quot;Game1&quot;, &quot;Creators&#39; interests&quot;, &quot;Loading bar&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 20; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(600,400); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;#&quot;; int highestGrade = 0; int lowestGrade = 0; int grade1 = 50; int grade2 = 100; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { // Hello Action msg = &quot;Mini Online Games center&quot;; message.setText(msg); } else if ( selection.equals(MENUS[1]) ) { // Color Action highestGrade = Math.max(grade1, grade2); lowestGrade = Math.min(grade1, grade2); message.setText( &quot;&lt;html&gt;Let start with a warm up math game about how to calculate your average Grade&lt;br&gt;&quot; + &quot;&lt;br&gt;&quot; + &quot;First we have two grades: &quot; + grade1 + &quot; and &quot; + grade2 + &quot;&lt;br&gt;&quot; + &quot;&lt;br&gt;&quot; + &quot;Then find the highest Grade, using highestGrade = Math.max(grade1, grade2);&quot; + &quot;&lt;br&gt;&quot; + &quot;&lt;br&gt;&quot; + &quot;Now we find the highest Grade: &quot; + highestGrade + &quot;&lt;br&gt;&quot; + &quot;&lt;br&gt;&quot; + &quot;Then find the lowest Grade, using lowestGrade = Math.min(grade1, grade2);&quot; + &quot;&lt;br&gt;&quot; + &quot;&lt;br&gt;&quot; + &quot;Now we find the lowest Grade: &quot; + lowestGrade + &quot;&lt;br&gt;&quot; + &quot;&lt;br&gt;&quot; + &quot;Last, average the two value, we get our average grade: &quot; + (highestGrade - lowestGrade) + &quot;&lt;/html&gt;&quot; ); } else if ( selection.equals(MENUS[2]) ) { msg = &quot;My interest: play video games and my pair&#39;s interest: dog training&quot;; message.setText(msg); } else { // Loading Bar Action String loading = &quot;&lt;p&gt;Loading&lt;/p&gt;&quot;; // Code to run on a Timer Timer timer = new Timer(); TimerTask task = new TimerTask() { public void run() { // Method for TimerTask // Static and Local variables used to manage message building int random = (int) (Math.random() * COLORS.length); // random logic MenuJFrame.hashes += &quot;&lt;font color=&quot; + COLORS[random] + &quot;&gt;&quot; + hash + &quot;&lt;/font&gt;&quot;; String msg = start_msg + loading + hashes + end_msg; message.setText(msg); // Shutdown timer and reset data if(MenuJFrame.step++ &gt; MenuJFrame.delay) { MenuJFrame.step = 1; MenuJFrame.hashes=&quot;&quot;; timer.cancel(); } }; }; // Schedule task and interval timer.schedule(task, 200, 200); message.setText(start_msg + loading + hash + end_msg); // prime/initial display } } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); . The Kernel crashed while executing code in the the current cell or a previous cell. Please review the code in the cell(s) to identify a possible cause of the failure. Click &lt;a href=&#39;https://aka.ms/vscodeJupyterKernelCrash&#39;&gt;here&lt;/a&gt; for more info. View Jupyter &lt;a href=&#39;command:jupyter.viewOutput&#39;&gt;log&lt;/a&gt; for further details. . class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings String [][] cthulhus; //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot;ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, //[0][0] eyes &quot; _⏄_/ &quot;, //[0][1] chin &quot; --0-- &quot;, //[0][2] body &quot; ⎛ ⎞ &quot; //[0][3] legs }, //Monkey 1 { &quot; ʕ༼ ◕_◕ ༽ʔ&quot;, //[1][0] &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot; }, //Monkey 2 { &quot; ʕ(▀ ⍡ ▀)ʔ&quot;, //[2][0] &quot; _⎐_/ &quot;, &quot; &lt;-2-&gt; &quot;, &quot; 〈 〉 &quot; }, //Monkey 3 { &quot;ʕ ͡° ͜ʖ ° ͡ʔ&quot;, //[3][0] &quot; _⍾_/ &quot;, &quot; ==3== &quot;, &quot; _/ _ &quot; }, //Monkey 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot; //[4][3] }, }; cthulhus = new String[][]{ { &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⡀⠀⠀⠀⠀⠀⠀⢎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ʕง ͠° ͟ل͜ ͡°)ʔ &quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⢱⠀⠀⢀⣤⡀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ _⏄_/ &quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠻⠉⣧⣿⣿⣿⠀⠀⢸⠇⠀⠐⠉⡆⠀⠀⠀⠀⠀⠀ --0-- &quot;, &quot;⠀⠀⠀⠀⢀⠔⠒⢦⠀⢻⡄⠀⢿⣻⣿⡿⢀⣴⣋⣄⣄⣌⣠⠃⠀⠀⠀⠀⠀⠀ ⎛ ⎞ &quot;, &quot;⠀⠀⠀⠀⠈⠀⢀⡞⠀⠈⠛⣷⣾⣿⣿⣿⣿⣿⣯⣥⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀ &quot;, &quot;⠀⠀⠀⠀⠀⠀⠈⠷⣦⣴⡾⢿⣿⡿⢿⣿⣋⣽⠶⢦⠙⢷⡀⠀⠀⠀⠀⠀⠀⠀ &quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡏⢀⡆⠈⠉⠁⡄⠈⡇⠘⢇⠀⢈⡆⠀⠀⠀⠀ &quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡯⠀⠸⠁⠀⠀⠸⣧⡀⡇⠀⠈⠉⠉⠀⠀⠀⠀⠀ &quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡴⠁⠀⠀⠀⠀⠙⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀ &quot; }, { &quot; ʕ༼ ◕_◕ ༽ʔ &quot;, &quot; _⎏_/ &quot;, &quot; ++1++ &quot;, &quot; ⌋ ⌊ &quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⠀⠙⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣟⡇⠀⠀⠈⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡧⣅⠀⠀⠐⣽⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣗⠢⠀⠀⠀⠹⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠑⠂⠀⠀⠸⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠶⠶⠲⢶⣦⣄⠀⠀⠀⠀⢻⣤⠃⠄⠀⠴⢺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⠀⠀⠀⠀⠀⠙⢿⠷⣄⠀⠀⢸⡦⠚⣁⡀⢈⣹⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣇⠀⠀⣷⡖⢐⢩⡡⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡟⣿⡆⠀⢸⡧⠄⡄⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⠆⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡷⣳⡅⠀⠀⣷⠠⠩⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⡤⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⢨⡟⣦⡆⠀⠀⣾⣧⠄⠂⣁⡀⠀⠀⠀⣠⡶⠞⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠣⢀⠀⠀⠀⠀⠀⠀⣠⣮⢲⣿⠇⠀⠰⣼⣿⠀⡀⣀⠀⡀⠀⣼⣷⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠒⢶⣆⢾⢿⣭⡿⠃⠀⠠⠤⠊⢽⡗⡴⢀⠁⠃⠀⣿⡼⢀⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢴⣛⣿⣿⡿⢿⣳⡄⠠⠤⠬⠈⣿⣷⠄⠄⡈⠘⠣⠹⣿⣷⣄⢠⣴⣚⠟⠛⠉⠙⠳⣆⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⣄⠀⠀⠀⠀⣆⠋⠯⡷⣾⠟⠀⠀⡃⣯⠀⠠⠐⢋⡟⢿⡁⢁⠀⢂⢔⣆⠈⢻⣿⠖⢨⣀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠈⣧⠀⢠⡋⣉⠤⠬⣽⡏⠀⠀⣢⣭⣀⡉⠄⠳⢺⡇⢸⠫⠑⠀⠄⣀⣈⣄⠾⣟⠿⡖⢘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⢸⢀⡖⠛⠂⣰⣦⣿⢀⡀⣿⣿⠛⠁⠀⠈⢒⣿⠁⢸⠗⠒⠂⢄⠁⠀⢻⣏⣮⠀⠙⣦⡄⠀⠉⠀⠀⢠⠎⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⡟⢸⡷⢾⠑⢥⣨⣿⢃⣬⠞⡿⠀⠄⠁⢀⢠⡟⠀⢸⡤⠈⠠⠀⠑⡀⠹⣷⣿⡄⠀⣷⡤⠀⠈⠘⡀⡞⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⢠⠃⣿⣬⢴⠻⣁⣛⣿⡼⠁⢰⢤⣤⠘⠀⠁⢋⡇⠀⣾⡁⠀⢀⠀⡦⢤⢴⣿⣽⣷⢀⣿⠤⠀⠈⠉⠃⣧⠀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⡚⠀⣿⣀⣀⡕⢧⣨⣭⣇⠀⣄⠀⡀⠔⠌⠋⠙⡇⢰⣿⠙⠋⠃⠈⡀⠀⢀⠉⣿⣻⣿⡧⠀⠀⠈⠈⠁⢸⡀⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⡀⠀⠇⠀⢸⣈⠐⢀⡔⠥⣤⣽⣶⠃⠩⠁⠀⠐⠀⢲⣧⣾⠗⠄⠂⠀⠀⠈⠙⠸⠀⣿⣽⡯⠀⠀⠀⠀⠉⠃⠀⢇⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠂⠀⠰⡄⠀⣿⡿⠈⠈⣰⠂⠤⢼⠆⠒⠒⡀⠄⢀⣨⣿⣁⢀⣀⠀⠈⠢⠤⢀⡆⢠⣿⠯⢀⡀⠀⠀⠄⠘⠀⠀⢸⠀⠀⠀⠀⠀&quot;, &quot;⠀⠀⠀⠀⠀⠀⠈⠂⢼⣿⡟⡞⠉⠍⠐⠸⡄⠀⠀⠄⠈⣩⡟⠉⠡⠈⠀⢀⡀⠀⢀⣠⢃⠾⠍⠀⠀⠀⠀⠈⠁⠃⠀⠀⡈⠀⢐⠀⠀⠀&quot; }, //Cthulhu 2 { &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⣶⣷⣾⣿⣾⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣄⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⡀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⢀⣴&quot;, &quot; ⠀⠀⠀⠀⠀⣰⣾⣿⣿⣿⣿⣿⣿⡟⠛⠿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠟⠁⠀⢀⣿⣿⣿⣿⣿⠋⠀⠀⢀⣠⣰⣾⣾⣿&quot;, &quot; ⠀⠀⠀⠀⣼⣿⣿⠏⡿⠋⠀⠀⠉⢿⡆⠀⠈⠻⣿⣯⣿⡇⠀⠀⠀⠀⠀⣾⣿⣿⣿⣏⠀⠀⣠⣾⣿⣿⣿⣿⠋⢀⣴⣬⣿⣿⡿⡛⢿⣷&quot;, &quot; ⠀⠀⠀⠀⣿⣿⠃⠀⠁⠀⠀⠀⠀⣸⣿⠀⠀⠀⣿⣿⣿⣦⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⢀⣾⣿⣿⣿⣾⠟⣣⣴⠋⢻⣿⣏⣉⣿⣿⣿⣿&quot;, &quot; ⠀⠀⠀⠈⣿⣿⡀⠀⠀⠀⠀⢀⣰⡿⠃⠀⠀⠀⣿⣥⣟⡝⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣼⣿⣿⣾⡟⢻⣿⡿⡟⠿⣿⣿⣿⣿⣿&quot;, &quot; ⠀⠀⠀⠀⠘⠿⣿⣶⣶⣶⣶⠿⠛⠁⠀⠀⠀⣴⡿⣷⣿⣥⣴⣶⣶⣶⣤⣤⣀⣿⣿⣿⣿⣫⣿⣿⣿⡿⢛⣿⣿⠛⠟⠈⢠⣿⣿⣿⣿⣿&quot;, &quot; ʕ(▀ ⍡ ▀)ʔ ⠀⠀⣀⡤⠤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⢷⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣩⣿⡿⢿⣉⣽⣿⢟⠟⠉⠀⢠⣿⣿⣿⣿⣿⣿&quot;, //[2][0] &quot; _⎐_/ ⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣟⣿⣿⣿⣿⢿⠾⠿⠿⢿⢿⣦⣿⣿⣿⡿⠻⣯⣼⣿⣿⡛⠁⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿ &quot;, &quot; &lt;-2-&gt; ⣸⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣟⣿⣿⣿⣅⡀⠀⣀⣀⣤⣴⡿⣿⠛⣻⣷⡾⠿⣯⡸⢿⣿⣦⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿ &quot;, &quot; 〈 〉 ⢿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⢼⣿⣯⣿⣛⣿⣿⠿⣿⣛⣿⣷⣼⣿⣿⠟⣻⡳⢖⠛⢿⣿⣟⠛⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿ &quot;, &quot; ⠘⣿⣿⣦⣤⣤⣀⣠⣤⣴⣿⡿⣿⡿⠟⠁⠀⠙⠿⢿⢿⣿⣿⣿⣿⣿⠿⣿⡯⠅⠉⠀⠙⢿⣿⣿⣿⡛⠿⣿⣿⣷⣦⣿⣿⣷⣿⣿⣿⣿&quot;, &quot; ⠀⠘⠻⢿⣿⣿⣿⣿⣿⡿⠿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠁⠈⠁⠈⠉⣽⣿⠋⠀⠀⠀⠀⣀⡤⠶⠻⠿⠛⠻⠛⠿⠛⠿⠛⠛⠛⠋⠉⠉⠁&quot;, &quot; ⠀⠀⠀⠀⠀⠉⠁⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣄⣀⣀⣤⠾⠋⠀⠀⠀⠐⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot; }, //Cthulhu 3 { &quot; ⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ &quot;, &quot; ⠀⠀⠀⠀⠀⠀⣼⡏⠀⠀⠀ʕ ͡° ͜ʖ ° ͡ʔ⠀⠀⠀⠀⠀⠀⠀ &quot;, &quot; ⠀⠀⠀⠀⠀⠀⢿⣧⠀⠀⠀⠀ _⍾_/ &quot;, &quot; ⠀⠀⠀⠀⠀⠀⠈⢻⣷⡀⠀⠀⠀==3==⠀⠀⠀⠈⠢⣄⡀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡄ _/ _ ⠉⠙⠻⣷⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣄⣮⠟⠀⠀&quot;, &quot; ⠀⢀⣠⣲⣶⠶⣄⠀⠀⣸⠯⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢯⠟⠇⠀⠀⠀&quot;, &quot; ⠀⡞⣾⡟⢻⣍⣼⠇⣰⣿⡿⠀⠀⠀⠀⠀⠀⠀⣶⠦⣀⠀⠀⠀⠀⠩⢪⢄⠀⠀&quot;, &quot; ⢸⢮⡭⡇⠀⠙⢉⣼⡿⣾⠁⠀⠀⠀⠀⠀⠀⠀⠁⠵⣦⡉⠈⠀⠀⢀⢪⡫⡄⠀&quot;, &quot; ⠘⣸⣮⣷⡀⠀⣸⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣭⣆⠀⠀⡐⠗⡭⠢⠀&quot;, &quot; ⠀⠘⡽⡫⣿⡄⢿⣿⣷⣱⠀⠀⠀⠀⠀⠀⠀⠀⣠⢖⢝⣳⠞⣠⣼⣏⢏⣧⠛⠀&quot;, &quot; ⠀⠀⠰⣉⣟⣿⡘⣿⣿⣿⢵⡀⠀⠀⠀⠀⠀⠀⣟⡏⠀⠀⣾⣿⣿⡇⣠⡑⠀⠀&quot;, &quot; ⠀⠀⠀⠈⠉⠉⠁⠘⠉⠛⠈⠁⠀⠀⠀⠀⠀⠀⠈⠋⠀⠀⠉⠉⠉⠁⠉⠀⠀⠀&quot; }, //Cthulhu 4 { &quot; (◕‿◕✿) &quot;, //[4][0] &quot; _⍾_/ &quot;, //[4][1] &quot; ==4== &quot;, //[4][2] &quot; _/ _ &quot;, &quot; &quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⣹⣿⡇⠀⠀⠀⠀⠀⠀⣴⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠈⢿⣿⡆⠀⠀⠀⠀⠀⣼⣿⡇⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⢸⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⡇⠀⠀⠀⢠⣿⣿⡇⠀⠀⠀⠀⠀⣾⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⠃⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠠⣶⣾⣷⣦⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⠘⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠘⣿⡀⠈⠻⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣄⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠈⠁⠀⠀⠈⢿⣿⣷⡀⠀⠀⠀⠀⠀⢸⣿⣿⣷⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⢸⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⢀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣷⡄⠀⠀⠀⠀⠈⣿⣿⣿⡦⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⣽⣿⣿⠇⠀⠀⠀⠀⢠⣾⣿⡿⠿⠿⠿⣿⣦⡀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣧⡀⠀⠀⠀⠀⢸⣿⣿⣿⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⢰⣿⣿⣿⠀⠀⠀⠀⣰⣿⣿⠏⠀⠀⠀⠸⠾⠿⠃&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣆⡀⠀⠀⠘⣿⣿⣿⡇⠀⣿⣿⣿⡇⠀⠀⠀⢀⣾⣿⣿⡏⠀⠀⠀⠀⣻⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣷⡄⠀⠀⣿⣿⣿⡟⢰⣿⣿⣿⡇⠀⠀⠀⣼⣿⣿⣿⠀⠀⠀⠀⠀⣻⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⢹⣿⣿⣇⢸⣿⣿⣿⡇⠀⢀⣼⣿⣿⣿⠃⠀⠀⠀⠀⢀⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣧⢸⣿⣿⣿⣸⣿⣿⣿⠀⢠⣾⣿⣿⣿⠃⠀⠀⠀⠀⢀⣼⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢀⣠⣴⣾⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣵⣾⣿⣿⣿⣿⣿⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot;, &quot; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&quot; }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); System.out.println(&quot;One day, there are total of five little monkeys want to jump on the bed to sleep&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; int Crow = 4; int row1 = 4; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; monkeyCount; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeys[row].length; col++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } System.out.println(); System.out.println(&quot;--&quot;); System.out.println(); System.out.println(&quot;One little monkeys jumping on the bed&quot;); for (int col1 = 0; col1 &lt; monkeys[row1].length; col1++) { System.out.print(monkeys[row1][col1] + &quot; &quot;); System.out.println(); } row1 -= 1; System.out.println(); System.out.println(&quot;--&quot;); System.out.println(); System.out.println(&quot;--&quot;); System.out.println(); System.out.println(&quot;jumping to the the arms of Cthulhu&quot;); System.out.println(); for (int Ccol = 0; Ccol &lt; cthulhus[Crow].length; Ccol++) { // prints specific part of the monkey from the column System.out.print(cthulhus[Crow][Ccol] + &quot; &quot;); //this is new line between separate parts System.out.println(); } System.out.println(); System.out.println(&quot;--&quot;); System.out.println(); System.out.println(&quot;Now, there are &quot; + (i-1) + &quot; little monkeys left&quot;); //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; Crow -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢛⣛⣼⣿⣿⣿⣿⣿⣿⠟⠛⠛⠋⠛⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣡⣈⡈⢻⣿⣿⣿⣿⡇⢰⣿⣿⣿⣿⣿⣿⣿⠋⠈⠀⣂⣐⡒⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⣚⣸⡃⢹⣿⣿⣿⣿⣷⣀⣍⡀⠑⠍⠻⣿⡏⠠⡀⢉⣉⠙⢻⣷⡄⠐⠀⠀⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁⠘⣿⣿⣿⣿⣿⣿⣿⣿⣦⡄⠀⠀⢀⠠⠹⣿⣿⣇⢈⣿⡇⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠈⠌⠉⠉⠛⠻⣿⣿⣿⣿⡀⠁⠀⠂⠉⠈⠉⠁⣰⠟⠁⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣖⠀⠀⠀⠙⡻⣿⣿⡇⠀⠀⢔⣿⣷⡾⠋⠀⠀⠀⠀⣤⡟⠉⣠⡤⠙⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠙⠋⠙⠛⠛⠟⢻⣿⣿⣷⣄⠀⠀⠀⢜⣿⠃⠀⡀⠀⠿⠍⠀⠀⠀⣠⣶⣿⣿⣷⠜⢇⡀⣀⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⠿⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠸⠟⣿⣆⡀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⢉⣾⣿⣿⣿⣿⣿⡌⠀⠙⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⡿⠉⠀⠀⠀⣤⣶⣤⣌⠀⠀⠀⠀⠪⠀⠀⠛⢻⠀⠀⠉⠀⠀⠀⠀⠀⡆⠀⠀⠈⠛⠿⣿⣿⣿⡿⠃⠀⢼⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣇⠀⠀⠄⡤⠁⣽⣿⣿⣿⣄⠀⠘⣢⡀⠀⠀⠈⠡⠀⠀⢐⠈⠡⠀⠀⠁⠀⠤⠀⠠⠀⠀⢿⠉⠑⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣧⠄⠀⠀⠠⣴⣿⣿⣿⣿⣿⠆⠀⢨⣿⡄⠀⠀⠀⠀⠀⡀⠠⠀⡀⠀⠀⠀⠀⢀⡀⡀⠀⠀⠀⠀⢈⣺⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣶⡀⠀⠀⠙⠿⠿⣿⡿⠋⠀⠀⣲⠿⠋⠀⠀⠉⠀⠠⠀⠊⠀⠀⠀⠀⠀⣠⢸⡁⠑⣀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣤⡄⠀⠀⠀⠀⠀⠀⡀⣾⣿⠀⠀⢠⡀⠁⠀⠀⠀⠀⠀⣀⣤⣶⡿⣟⡅⣢⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣴⠒⠒⠿⣿⡇⠀⢀⣗⣶⣶⢦⠖⢴⣖⡛⠉⣰⣷⠿⢫⣾⣞⣿⣿⣾⣿⣿⣯⡅⣼⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⠀⠀⣐⠀⠸⠹⠀⢸⣹⣿⢣⡏⣾⣿⣿⣡⣼⢟⡡⣴⣿⣿⣿⣮⡻⣿⣿⣿⡿⡟⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠸⡄⠉⠀⡸⡐⠀⡿⠿⠾⢸⣇⠢⠶⠛⢋⣡⣯⢾⣿⣿⣿⣿⣿⣿⢘⢿⣿⣷⣶⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡥⣄⠈⠙⠋⠀⢠⠌⠀⠀⠀⠀⠀⠀⢀⡴⣱⣿⣿⣏⠿⠟⢛⣛⣛⣋⣿⣷⣮⣝⢿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣁⣶⣿⣿⣷⣼⣞⢤⡞⠀⠀⠀⠀⠀⢀⣴⡿⢱⣿⡿⣿⣿⣶⣍⡻⣿⣿⣿⣿⣿⣿⣿⣷⣌⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⣿⣿⢟⡝⣾⣿⣿⣿⣿⢋⣾⠺⠁⠀⠀⠀⣀⣴⣿⢟⣱⣿⣿⣿⣷⣯⣽⢟⣴⣿⣿⡿⢋⣽⠟⣫⣽⣿⣼⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⡿⣷⠟⣼⣿⣿⣼⣿⢃⣿⡇⠀⠀⠀⣠⣾⣿⣿⢯⣿⣿⣿⣿⣿⣿⣿⢳⣿⣿⣿⠇⣰⣿⣣⣾⣿⣿⣿⡗⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⣿⣿⢇⡟⣴⣿⣿⣿⣿⢣⣿⣿⠉⠀⣠⣾⣿⣿⡿⣣⣿⣿⡿⣿⣿⣿⡿⣱⣿⣿⣿⡟⣼⣿⢿⣿⡿⣿⣿⣿⣧⢿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⡿⣯⢞⣼⣿⣟⣵⣿⣯⣿⣿⠿⣠⣾⣿⣿⣿⡟⣱⣿⣿⣿⣿⣶⣽⢿⣾⣿⣿⣿⡿⢹⣿⣳⡿⣫⣾⣿⣿⣿⡿⣾⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⢳⣿⢸⣿⣿⣿⣿⣿⠾⠿⢏⣿⣿⣿⣿⡿⠟⣼⣿⣿⣿⣿⣿⡿⣵⣿⣿⣿⣿⣿⣇⣿⣵⣟⣾⣿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⡿⣼⡿⣸⣿⡿⠿⠛⠉⢀⣴⣿⣿⡿⢛⣼⠆⣾⣿⡿⣿⣿⣿⢟⣾⣿⣿⣿⣿⣿⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⢯⣶⡟⣨⣥⣖⠁⠀⠀⢠⣿⡿⢟⣷⣾⣿⢏⣼⣿⣿⣿⣦⣟⣽⣿⡟⣿⣿⣿⣿⣿⣿⡇⢹⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣵⡿⢋⣴⣿⡿⠀⠀⠀⣀⣿⣭⣾⣿⣿⣿⢏⣾⣿⣿⣿⣿⢋⣽⣿⣿⣧⢹⣿⣿⢿⣡⡾⡃⣾⣿⡔⣋⣙⣟⣙⣿⣿⡇⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣷⣿⣿⡿⠃⠀⠀⠀⣟⣫⢿⣿⣿⣿⡟⣼⣿⣿⣎⡽⣵⣿⣿⣿⣿⣿⡷⣯⣾⢿⣿⣿⡧⢹⡿⣫⣥⣯⣭⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⡿⠁⠀⢤⣶⡆⣿⣿⣿⣿⣿⡿⣸⣿⣿⣿⢯⣾⣿⣿⣿⣿⣿⡿⣛⣫⣼⣿⣿⣿⠇⣼⣿⣶⣾⣿⣿⣿⣿⣿⡏⣿⣿⣿⣿⣿⣿&quot;); System.out.println(&quot;⣿⣿⣿⡇⣨⣷⣿⣿⣿⠸⣿⣿⣿⣿⢣⣿⣶⣧⢷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⠛⢋⣡⣴⣽⣿⣯⣭⣭⣭⣭⣿⣿⡇⣿⣿⣿⣿⣿⣿&quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy One day, there are total of five little monkeys want to jump on the bed to sleep ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ (◕‿◕✿) _⍾_/ ==4== _/ _ -- One little monkeys jumping on the bed (◕‿◕✿) _⍾_/ ==4== _/ _ -- -- jumping to the the arms of Cthulhu (◕‿◕✿) _⍾_/ ==4== _/ _ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⣹⣿⡇⠀⠀⠀⠀⠀⠀⣴⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠈⢿⣿⡆⠀⠀⠀⠀⠀⣼⣿⡇⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⢸⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⡇⠀⠀⠀⢠⣿⣿⡇⠀⠀⠀⠀⠀⣾⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⠃⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠠⣶⣾⣷⣦⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⠘⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠘⣿⡀⠈⠻⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣄⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠈⠁⠀⠀⠈⢿⣿⣷⡀⠀⠀⠀⠀⠀⢸⣿⣿⣷⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⢸⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⢀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣷⡄⠀⠀⠀⠀⠈⣿⣿⣿⡦⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⠀⣽⣿⣿⠇⠀⠀⠀⠀⢠⣾⣿⡿⠿⠿⠿⣿⣦⡀ ⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣧⡀⠀⠀⠀⠀⢸⣿⣿⣿⠀⠀⣿⣿⣿⡇⠀⠀⠀⠀⢰⣿⣿⣿⠀⠀⠀⠀⣰⣿⣿⠏⠀⠀⠀⠸⠾⠿⠃ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣆⡀⠀⠀⠘⣿⣿⣿⡇⠀⣿⣿⣿⡇⠀⠀⠀⢀⣾⣿⣿⡏⠀⠀⠀⠀⣻⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣷⡄⠀⠀⣿⣿⣿⡟⢰⣿⣿⣿⡇⠀⠀⠀⣼⣿⣿⣿⠀⠀⠀⠀⠀⣻⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⢹⣿⣿⣇⢸⣿⣿⣿⡇⠀⢀⣼⣿⣿⣿⠃⠀⠀⠀⠀⢀⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣧⢸⣿⣿⣿⣸⣿⣿⣿⠀⢠⣾⣿⣿⣿⠃⠀⠀⠀⠀⢀⣼⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢀⣠⣴⣾⣿⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣵⣾⣿⣿⣿⣿⣿⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ -- Now, there are 4 little monkeys left ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ -- One little monkeys jumping on the bed ʕ ͡° ͜ʖ ° ͡ʔ _⍾_/ ==3== _/ _ -- -- jumping to the the arms of Cthulhu ⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⣼⡏⠀⠀⠀ʕ ͡° ͜ʖ ° ͡ʔ⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⢿⣧⠀⠀⠀⠀ _⍾_/ ⠀⠀⠀⠀⠀⠀⠈⢻⣷⡀⠀⠀⠀==3==⠀⠀⠀⠈⠢⣄⡀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡄ _/ _ ⠉⠙⠻⣷⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣄⣮⠟⠀⠀ ⠀⢀⣠⣲⣶⠶⣄⠀⠀⣸⠯⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢯⠟⠇⠀⠀⠀ ⠀⡞⣾⡟⢻⣍⣼⠇⣰⣿⡿⠀⠀⠀⠀⠀⠀⠀⣶⠦⣀⠀⠀⠀⠀⠩⢪⢄⠀⠀ ⢸⢮⡭⡇⠀⠙⢉⣼⡿⣾⠁⠀⠀⠀⠀⠀⠀⠀⠁⠵⣦⡉⠈⠀⠀⢀⢪⡫⡄⠀ ⠘⣸⣮⣷⡀⠀⣸⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣭⣆⠀⠀⡐⠗⡭⠢⠀ ⠀⠘⡽⡫⣿⡄⢿⣿⣷⣱⠀⠀⠀⠀⠀⠀⠀⠀⣠⢖⢝⣳⠞⣠⣼⣏⢏⣧⠛⠀ ⠀⠀⠰⣉⣟⣿⡘⣿⣿⣿⢵⡀⠀⠀⠀⠀⠀⠀⣟⡏⠀⠀⣾⣿⣿⡇⣠⡑⠀⠀ ⠀⠀⠀⠈⠉⠉⠁⠘⠉⠛⠈⠁⠀⠀⠀⠀⠀⠀⠈⠋⠀⠀⠉⠉⠉⠁⠉⠀⠀⠀ -- Now, there are 3 little monkeys left ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 -- One little monkeys jumping on the bed ʕ(▀ ⍡ ▀)ʔ _⎐_/ &lt;-2-&gt; 〈 〉 -- -- jumping to the the arms of Cthulhu ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⣶⣷⣾⣿⣾⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣄⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⡀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⢀⣴ ⠀⠀⠀⠀⠀⣰⣾⣿⣿⣿⣿⣿⣿⡟⠛⠿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠟⠁⠀⢀⣿⣿⣿⣿⣿⠋⠀⠀⢀⣠⣰⣾⣾⣿ ⠀⠀⠀⠀⣼⣿⣿⠏⡿⠋⠀⠀⠉⢿⡆⠀⠈⠻⣿⣯⣿⡇⠀⠀⠀⠀⠀⣾⣿⣿⣿⣏⠀⠀⣠⣾⣿⣿⣿⣿⠋⢀⣴⣬⣿⣿⡿⡛⢿⣷ ⠀⠀⠀⠀⣿⣿⠃⠀⠁⠀⠀⠀⠀⣸⣿⠀⠀⠀⣿⣿⣿⣦⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⢀⣾⣿⣿⣿⣾⠟⣣⣴⠋⢻⣿⣏⣉⣿⣿⣿⣿ ⠀⠀⠀⠈⣿⣿⡀⠀⠀⠀⠀⢀⣰⡿⠃⠀⠀⠀⣿⣥⣟⡝⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⣼⣿⣿⣾⡟⢻⣿⡿⡟⠿⣿⣿⣿⣿⣿ ⠀⠀⠀⠀⠘⠿⣿⣶⣶⣶⣶⠿⠛⠁⠀⠀⠀⣴⡿⣷⣿⣥⣴⣶⣶⣶⣤⣤⣀⣿⣿⣿⣿⣫⣿⣿⣿⡿⢛⣿⣿⠛⠟⠈⢠⣿⣿⣿⣿⣿ ʕ(▀ ⍡ ▀)ʔ ⠀⠀⣀⡤⠤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⢷⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣩⣿⡿⢿⣉⣽⣿⢟⠟⠉⠀⢠⣿⣿⣿⣿⣿⣿ _⎐_/ ⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣟⣿⣿⣿⣿⢿⠾⠿⠿⢿⢿⣦⣿⣿⣿⡿⠻⣯⣼⣿⣿⡛⠁⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿ &lt;-2-&gt; ⣸⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣟⣿⣿⣿⣅⡀⠀⣀⣀⣤⣴⡿⣿⠛⣻⣷⡾⠿⣯⡸⢿⣿⣦⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿ 〈 〉 ⢿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⢼⣿⣯⣿⣛⣿⣿⠿⣿⣛⣿⣷⣼⣿⣿⠟⣻⡳⢖⠛⢿⣿⣟⠛⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿ ⠘⣿⣿⣦⣤⣤⣀⣠⣤⣴⣿⡿⣿⡿⠟⠁⠀⠙⠿⢿⢿⣿⣿⣿⣿⣿⠿⣿⡯⠅⠉⠀⠙⢿⣿⣿⣿⡛⠿⣿⣿⣷⣦⣿⣿⣷⣿⣿⣿⣿ ⠀⠘⠻⢿⣿⣿⣿⣿⣿⡿⠿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠁⠈⠁⠈⠉⣽⣿⠋⠀⠀⠀⠀⣀⡤⠶⠻⠿⠛⠻⠛⠿⠛⠿⠛⠛⠛⠋⠉⠉⠁ ⠀⠀⠀⠀⠀⠉⠁⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣄⣀⣀⣤⠾⠋⠀⠀⠀⠐⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ -- Now, there are 2 little monkeys left ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ -- One little monkeys jumping on the bed ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ -- -- jumping to the the arms of Cthulhu ʕ༼ ◕_◕ ༽ʔ _⎏_/ ++1++ ⌋ ⌊ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⠀⠙⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣟⡇⠀⠀⠈⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡧⣅⠀⠀⠐⣽⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣗⠢⠀⠀⠀⠹⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠑⠂⠀⠀⠸⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠶⠶⠲⢶⣦⣄⠀⠀⠀⠀⢻⣤⠃⠄⠀⠴⢺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⠀⠀⠀⠀⠀⠙⢿⠷⣄⠀⠀⢸⡦⠚⣁⡀⢈⣹⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣇⠀⠀⣷⡖⢐⢩⡡⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡟⣿⡆⠀⢸⡧⠄⡄⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⠆⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡷⣳⡅⠀⠀⣷⠠⠩⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⡤⠤⠒⠁⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⢨⡟⣦⡆⠀⠀⣾⣧⠄⠂⣁⡀⠀⠀⠀⣠⡶⠞⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠣⢀⠀⠀⠀⠀⠀⠀⣠⣮⢲⣿⠇⠀⠰⣼⣿⠀⡀⣀⠀⡀⠀⣼⣷⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠒⢶⣆⢾⢿⣭⡿⠃⠀⠠⠤⠊⢽⡗⡴⢀⠁⠃⠀⣿⡼⢀⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢴⣛⣿⣿⡿⢿⣳⡄⠠⠤⠬⠈⣿⣷⠄⠄⡈⠘⠣⠹⣿⣷⣄⢠⣴⣚⠟⠛⠉⠙⠳⣆⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⣄⠀⠀⠀⠀⣆⠋⠯⡷⣾⠟⠀⠀⡃⣯⠀⠠⠐⢋⡟⢿⡁⢁⠀⢂⢔⣆⠈⢻⣿⠖⢨⣀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠈⣧⠀⢠⡋⣉⠤⠬⣽⡏⠀⠀⣢⣭⣀⡉⠄⠳⢺⡇⢸⠫⠑⠀⠄⣀⣈⣄⠾⣟⠿⡖⢘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⢸⢀⡖⠛⠂⣰⣦⣿⢀⡀⣿⣿⠛⠁⠀⠈⢒⣿⠁⢸⠗⠒⠂⢄⠁⠀⢻⣏⣮⠀⠙⣦⡄⠀⠉⠀⠀⢠⠎⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⡟⢸⡷⢾⠑⢥⣨⣿⢃⣬⠞⡿⠀⠄⠁⢀⢠⡟⠀⢸⡤⠈⠠⠀⠑⡀⠹⣷⣿⡄⠀⣷⡤⠀⠈⠘⡀⡞⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⢠⠃⣿⣬⢴⠻⣁⣛⣿⡼⠁⢰⢤⣤⠘⠀⠁⢋⡇⠀⣾⡁⠀⢀⠀⡦⢤⢴⣿⣽⣷⢀⣿⠤⠀⠈⠉⠃⣧⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⡚⠀⣿⣀⣀⡕⢧⣨⣭⣇⠀⣄⠀⡀⠔⠌⠋⠙⡇⢰⣿⠙⠋⠃⠈⡀⠀⢀⠉⣿⣻⣿⡧⠀⠀⠈⠈⠁⢸⡀⠀⠀⠀⠀⠀ ⠀⠀⠀⡀⠀⠇⠀⢸⣈⠐⢀⡔⠥⣤⣽⣶⠃⠩⠁⠀⠐⠀⢲⣧⣾⠗⠄⠂⠀⠀⠈⠙⠸⠀⣿⣽⡯⠀⠀⠀⠀⠉⠃⠀⢇⠀⠀⠀⠀⠀ ⠀⠀⠀⠂⠀⠰⡄⠀⣿⡿⠈⠈⣰⠂⠤⢼⠆⠒⠒⡀⠄⢀⣨⣿⣁⢀⣀⠀⠈⠢⠤⢀⡆⢠⣿⠯⢀⡀⠀⠀⠄⠘⠀⠀⢸⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠈⠂⢼⣿⡟⡞⠉⠍⠐⠸⡄⠀⠀⠄⠈⣩⡟⠉⠡⠈⠀⢀⡀⠀⢀⣠⢃⠾⠍⠀⠀⠀⠀⠈⠁⠃⠀⠀⡈⠀⢐⠀⠀⠀ -- Now, there are 1 little monkeys left ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ -- One little monkeys jumping on the bed ʕง ͠° ͟ل͜ ͡°)ʔ _⏄_/ --0-- ⎛ ⎞ -- -- jumping to the the arms of Cthulhu ⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⡀⠀⠀⠀⠀⠀⠀⢎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ʕง ͠° ͟ل͜ ͡°)ʔ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⢱⠀⠀⢀⣤⡀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ _⏄_/ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠻⠉⣧⣿⣿⣿⠀⠀⢸⠇⠀⠐⠉⡆⠀⠀⠀⠀⠀⠀ --0-- ⠀⠀⠀⠀⢀⠔⠒⢦⠀⢻⡄⠀⢿⣻⣿⡿⢀⣴⣋⣄⣄⣌⣠⠃⠀⠀⠀⠀⠀⠀ ⎛ ⎞ ⠀⠀⠀⠀⠈⠀⢀⡞⠀⠈⠛⣷⣾⣿⣿⣿⣿⣿⣯⣥⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠈⠷⣦⣴⡾⢿⣿⡿⢿⣿⣋⣽⠶⢦⠙⢷⡀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡏⢀⡆⠈⠉⠁⡄⠈⡇⠘⢇⠀⢈⡆⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡯⠀⠸⠁⠀⠀⠸⣧⡀⡇⠀⠈⠉⠉⠀⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡴⠁⠀⠀⠀⠀⠙⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀ -- Now, there are 0 little monkeys left No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢛⣛⣼⣿⣿⣿⣿⣿⣿⠟⠛⠛⠋⠛⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣡⣈⡈⢻⣿⣿⣿⣿⡇⢰⣿⣿⣿⣿⣿⣿⣿⠋⠈⠀⣂⣐⡒⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⣚⣸⡃⢹⣿⣿⣿⣿⣷⣀⣍⡀⠑⠍⠻⣿⡏⠠⡀⢉⣉⠙⢻⣷⡄⠐⠀⠀⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁⠘⣿⣿⣿⣿⣿⣿⣿⣿⣦⡄⠀⠀⢀⠠⠹⣿⣿⣇⢈⣿⡇⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠈⠌⠉⠉⠛⠻⣿⣿⣿⣿⡀⠁⠀⠂⠉⠈⠉⠁⣰⠟⠁⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣖⠀⠀⠀⠙⡻⣿⣿⡇⠀⠀⢔⣿⣷⡾⠋⠀⠀⠀⠀⣤⡟⠉⣠⡤⠙⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠙⠋⠙⠛⠛⠟⢻⣿⣿⣷⣄⠀⠀⠀⢜⣿⠃⠀⡀⠀⠿⠍⠀⠀⠀⣠⣶⣿⣿⣷⠜⢇⡀⣀⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⠿⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠸⠟⣿⣆⡀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⢉⣾⣿⣿⣿⣿⣿⡌⠀⠙⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⡿⠉⠀⠀⠀⣤⣶⣤⣌⠀⠀⠀⠀⠪⠀⠀⠛⢻⠀⠀⠉⠀⠀⠀⠀⠀⡆⠀⠀⠈⠛⠿⣿⣿⣿⡿⠃⠀⢼⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣇⠀⠀⠄⡤⠁⣽⣿⣿⣿⣄⠀⠘⣢⡀⠀⠀⠈⠡⠀⠀⢐⠈⠡⠀⠀⠁⠀⠤⠀⠠⠀⠀⢿⠉⠑⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣧⠄⠀⠀⠠⣴⣿⣿⣿⣿⣿⠆⠀⢨⣿⡄⠀⠀⠀⠀⠀⡀⠠⠀⡀⠀⠀⠀⠀⢀⡀⡀⠀⠀⠀⠀⢈⣺⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣶⡀⠀⠀⠙⠿⠿⣿⡿⠋⠀⠀⣲⠿⠋⠀⠀⠉⠀⠠⠀⠊⠀⠀⠀⠀⠀⣠⢸⡁⠑⣀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣤⡄⠀⠀⠀⠀⠀⠀⡀⣾⣿⠀⠀⢠⡀⠁⠀⠀⠀⠀⠀⣀⣤⣶⡿⣟⡅⣢⠀⠀⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣴⠒⠒⠿⣿⡇⠀⢀⣗⣶⣶⢦⠖⢴⣖⡛⠉⣰⣷⠿⢫⣾⣞⣿⣿⣾⣿⣿⣯⡅⣼⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⠀⠀⣐⠀⠸⠹⠀⢸⣹⣿⢣⡏⣾⣿⣿⣡⣼⢟⡡⣴⣿⣿⣿⣮⡻⣿⣿⣿⡿⡟⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠸⡄⠉⠀⡸⡐⠀⡿⠿⠾⢸⣇⠢⠶⠛⢋⣡⣯⢾⣿⣿⣿⣿⣿⣿⢘⢿⣿⣷⣶⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡥⣄⠈⠙⠋⠀⢠⠌⠀⠀⠀⠀⠀⠀⢀⡴⣱⣿⣿⣏⠿⠟⢛⣛⣛⣋⣿⣷⣮⣝⢿⣿⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣁⣶⣿⣿⣷⣼⣞⢤⡞⠀⠀⠀⠀⠀⢀⣴⡿⢱⣿⡿⣿⣿⣶⣍⡻⣿⣿⣿⣿⣿⣿⣿⣷⣌⣿⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⣿⣿⢟⡝⣾⣿⣿⣿⣿⢋⣾⠺⠁⠀⠀⠀⣀⣴⣿⢟⣱⣿⣿⣿⣷⣯⣽⢟⣴⣿⣿⡿⢋⣽⠟⣫⣽⣿⣼⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⡿⣷⠟⣼⣿⣿⣼⣿⢃⣿⡇⠀⠀⠀⣠⣾⣿⣿⢯⣿⣿⣿⣿⣿⣿⣿⢳⣿⣿⣿⠇⣰⣿⣣⣾⣿⣿⣿⡗⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⣿⣿⢇⡟⣴⣿⣿⣿⣿⢣⣿⣿⠉⠀⣠⣾⣿⣿⡿⣣⣿⣿⡿⣿⣿⣿⡿⣱⣿⣿⣿⡟⣼⣿⢿⣿⡿⣿⣿⣿⣧⢿⣿⣿⣿⣿⣿ ⣿⣿⣿⡿⣯⢞⣼⣿⣟⣵⣿⣯⣿⣿⠿⣠⣾⣿⣿⣿⡟⣱⣿⣿⣿⣿⣶⣽⢿⣾⣿⣿⣿⡿⢹⣿⣳⡿⣫⣾⣿⣿⣿⡿⣾⣿⣿⣿⣿⣿ ⣿⣿⣿⢳⣿⢸⣿⣿⣿⣿⣿⠾⠿⢏⣿⣿⣿⣿⡿⠟⣼⣿⣿⣿⣿⣿⡿⣵⣿⣿⣿⣿⣿⣇⣿⣵⣟⣾⣿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿ ⣿⣿⡿⣼⡿⣸⣿⡿⠿⠛⠉⢀⣴⣿⣿⡿⢛⣼⠆⣾⣿⡿⣿⣿⣿⢟⣾⣿⣿⣿⣿⣿⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿ ⣿⢯⣶⡟⣨⣥⣖⠁⠀⠀⢠⣿⡿⢟⣷⣾⣿⢏⣼⣿⣿⣿⣦⣟⣽⣿⡟⣿⣿⣿⣿⣿⣿⡇⢹⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ ⣵⡿⢋⣴⣿⡿⠀⠀⠀⣀⣿⣭⣾⣿⣿⣿⢏⣾⣿⣿⣿⣿⢋⣽⣿⣿⣧⢹⣿⣿⢿⣡⡾⡃⣾⣿⡔⣋⣙⣟⣙⣿⣿⡇⣿⣿⣿⣿⣿⣿ ⣿⣷⣿⣿⡿⠃⠀⠀⠀⣟⣫⢿⣿⣿⣿⡟⣼⣿⣿⣎⡽⣵⣿⣿⣿⣿⣿⡷⣯⣾⢿⣿⣿⡧⢹⡿⣫⣥⣯⣭⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡿⠁⠀⢤⣶⡆⣿⣿⣿⣿⣿⡿⣸⣿⣿⣿⢯⣾⣿⣿⣿⣿⣿⡿⣛⣫⣼⣿⣿⣿⠇⣼⣿⣶⣾⣿⣿⣿⣿⣿⡏⣿⣿⣿⣿⣿⣿ ⣿⣿⣿⡇⣨⣷⣿⣿⣿⠸⣿⣿⣿⣿⢣⣿⣶⣧⢷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⠛⢋⣡⣴⣽⣿⣯⣭⣭⣭⣭⣿⣿⡇⣿⣿⣿⣿⣿⣿ .",
            "url": "https://tianbinliu.github.io/Fastpage/jupyter/2022/08/22/Java-notebook.html",
            "relUrl": "/jupyter/2022/08/22/Java-notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "about",
          "content": "home | about me | . A blog about me . My interest and skills . Interest Skills . Video game | Know a little bit of Java | . Soccer | Know how to build a website with Flask | . Read fiction | know how to use Github | . Sleep | Know how to use Python | . something for the week that shows your goals, efforts, and vocab . Goals Vocab Gratitude list . Something I will put right here in the future | mental health | my parents | . Something I will put right here in the future | psychology | teachers | . Something I will put right here in the future | Something I will put right here in the future | friends | . Some notes about gratitude to someone on campus and someone at home . Someone on campus: . Someone at home: . &lt;/div&gt; &lt;/div&gt;",
          "url": "https://tianbinliu.github.io/Fastpage/about.html",
          "relUrl": "/about.html",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://tianbinliu.github.io/Fastpage/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  

  
  

  
  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://tianbinliu.github.io/Fastpage/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}